Knowledge Base Chatbot Documentation

Overview
This is a comprehensive knowledge base chatbot system built with FastAPI, MongoDB, and LangChain. The system provides intelligent document processing and retrieval capabilities using FAISS vector database for semantic search.

Key Features:
1. Document Upload and Processing
   - Supports PDF, DOCX, and TXT file formats
   - Automatic text extraction and chunking
   - Embedding generation using OpenAI API
   - FAISS indexing for fast similarity search

2. Real-time Chat Interface
   - WebSocket-based communication
   - JWT authentication
   - Chat history persistence in MongoDB
   - Support for both normal chat and RAG (Retrieval Augmented Generation)

3. Vector Search Capabilities
   - Semantic search across uploaded documents
   - Configurable similarity thresholds
   - Source attribution and relevance scoring

Architecture Components:
- FastAPI backend with async support
- MongoDB for user data and chat history
- FAISS for vector similarity search
- LangChain for document processing and LLM integration
- OpenAI GPT models for natural language generation

Technical Implementation:
The system uses a microservices approach where document processing runs asynchronously in background tasks. When a document is uploaded, it goes through several stages:

1. Text Extraction: Content is extracted from various file formats
2. Text Chunking: Large documents are split into manageable chunks using RecursiveCharacterTextSplitter
3. Embedding Generation: Each chunk is converted to vector embeddings using OpenAI's text-embedding-ada-002 model
4. FAISS Indexing: Embeddings are stored in a FAISS index for efficient similarity search
5. Metadata Storage: Document metadata and chunk information is stored for retrieval

Security Features:
- JWT-based authentication for API endpoints
- Token-based WebSocket authentication
- Input validation and sanitization
- CORS configuration for frontend integration

Deployment:
The application is containerized using Docker with separate containers for the API server and MongoDB database. Volume mounting ensures data persistence across container restarts. 